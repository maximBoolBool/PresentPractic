// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PresentPractic;

#nullable disable

namespace PresentPractic.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PresentPractic.Models.DbModels.Present", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("PresentAddDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("present_add_date");

                    b.Property<string>("PresentDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("present_description");

                    b.Property<string>("PresentName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("present_name");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("present_status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("User");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("presents");
                });

            modelBuilder.Entity("PresentPractic.Models.DbModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_delete");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<DateTime>("userCreatedate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date_time");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("PresentPractic.Models.DbModels.Present", b =>
                {
                    b.HasOne("PresentPractic.Models.DbModels.User", "User")
                        .WithMany("Presents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PresentPractic.Models.DbModels.User", b =>
                {
                    b.Navigation("Presents");
                });
#pragma warning restore 612, 618
        }
    }
}
